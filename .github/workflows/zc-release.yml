name: release zc folder encryption kit

on:
  workflow_dispatch:
    # This allows manual triggering of the workflow

permissions:
  contents: write  # Needed for creating releases

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.18'  # Ensure we're using a compatible version

      - name: Extract version
        id: get_version
        run: |
          cd go/encrypt
          VERSION=$(grep "const tool_version" main.go | cut -d'"' -f2)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Version extracted: ${VERSION}"
          cd ../..

      - name: Check if release already exists
        id: check_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          TAG_VERSION="v${VERSION}"
          
          echo "Checking if tag $TAG_VERSION already exists..."
          
          # Use the GitHub CLI to check if the release exists
          if gh release view "$TAG_VERSION" &> /dev/null; then
            echo "Release $TAG_VERSION already exists. Exiting workflow successfully."
            echo "exists=true" >> $GITHUB_OUTPUT
            exit 0
          else
            echo "Release $TAG_VERSION does not exist. Continuing with build."
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build portable kit
        if: steps.check_release.outputs.exists != 'true'
        run: |
          cd go/encrypt
          make portable
          cd portable
          zip -r "../zc-${{ steps.get_version.outputs.version }}.zip" ./*
          cd ..
          echo "Created ZIP archive: zc-${{ steps.get_version.outputs.version }}.zip"

      - name: Create Release
        if: steps.check_release.outputs.exists != 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          TAG_VERSION="v${VERSION}"

          # Create release notes
          cat > release_notes.md << EOF
          zc folder encryption kit $TAG_VERSION
          
          This release contains the portable kit of ZC, a tool for securely encrypting folders and files.
    
          For full instructions, see the README.md file included in the package.
          EOF
          
          # Create the release with GitHub CLI
          gh release create "$TAG_VERSION" \
            --title "zc folder encryption kit $TAG_VERSION" \
            --notes-file release_notes.md \
            "zc-${VERSION}.zip"
